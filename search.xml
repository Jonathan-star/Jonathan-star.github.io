<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LaTeX Expressions</title>
    <url>/2020/06/08/LaTeXExpressions/</url>
    <content><![CDATA[<h1 id="不太好记的latex符号表达">不太好记的LaTeX符号表达</h1>
<h2 id="希腊字母">希腊字母</h2>
<table>
<thead>
<tr class="header">
<th>希腊字母</th>
<th>latex输入方法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\alpha\)</span> <span class="math inline">\(\Alpha\)</span></td>
<td><code>\alpha</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\beta\)</span> <span class="math inline">\(\Beta\)</span></td>
<td><code>\beta</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\gamma\)</span> <span class="math inline">\(\Gamma\)</span></td>
<td><code>\gamma</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\delta\)</span> <span class="math inline">\(\Delta\)</span></td>
<td><code>\delta</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\epsilon\)</span> <span class="math inline">\(\Epsilon\)</span></td>
<td><code>\epsilon</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\varepsilon\)</span></td>
<td><code>\varepsilon</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\zeta\)</span> <span class="math inline">\(\Zeta\)</span></td>
<td><code>\zeta</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\eta\)</span> <span class="math inline">\(\Eta\)</span></td>
<td><code>\eta</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\theta\)</span> <span class="math inline">\(\Theta\)</span></td>
<td><code>\theta</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th>希腊字母</th>
<th>latex输入方法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\iota\)</span> <span class="math inline">\(\Iota\)</span></td>
<td><code>\iota</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\kappa\)</span> <span class="math inline">\(\Kappa\)</span></td>
<td><code>\kappa</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\lambda\)</span> <span class="math inline">\(\Lambda\)</span></td>
<td><code>\lambda</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\mu\)</span> <span class="math inline">\(\Mu\)</span></td>
<td><code>\mu</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\nu\)</span> <span class="math inline">\(\Nu\)</span></td>
<td><code>\nu</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\xi\)</span> <span class="math inline">\(\Xi\)</span></td>
<td><code>\xi</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\omicron\)</span> <span class="math inline">\(\Omicron\)</span></td>
<td><code>\omicron</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\pi\)</span> <span class="math inline">\(\Pi\)</span></td>
<td><code>\pi</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\rho\)</span> <span class="math inline">\(\Rho\)</span></td>
<td><code>\rho</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th>希腊字母</th>
<th>latex输入方法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\sigma\)</span> <span class="math inline">\(\Sigma\)</span></td>
<td><code>\sigma</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\tau\)</span> <span class="math inline">\(\Tau\)</span></td>
<td><code>\tau</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\upsilon\)</span> <span class="math inline">\(\Upsilon\)</span></td>
<td><code>\upsilon</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\phi\)</span> <span class="math inline">\(\Phi\)</span></td>
<td><code>\phi</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\varphi\)</span></td>
<td><code>\varphi</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\chi\)</span> <span class="math inline">\(\Chi\)</span></td>
<td><code>\chi</code></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\psi\)</span> <span class="math inline">\(\Psi\)</span></td>
<td><code>\psi</code></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\omega\)</span> <span class="math inline">\(\Omega\)</span></td>
<td><code>\omega</code></td>
</tr>
</tbody>
</table>
<p>## 数学函数</p>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>指针操作相关</title>
    <url>/2020/05/17/%E6%8C%87%E9%92%88%E6%93%8D%E4%BD%9C%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="指针操作相关">指针操作相关</h1>
<blockquote>
<p>一下午速成计划</p>
</blockquote>
<h2 id="指针定义">指针定义</h2>
<p>因为<code>*</code>的位置比较奇怪，与朋友交流下感觉可以把指针定义<code>int * p</code>看成<code>int* p</code>，即，把<code>int*</code>看成<code>int</code>一样的类型名称。</p>
<h2 id="常量指针">常量指针</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span>* p;</span><br><span class="line">    p = &amp;b;</span><br><span class="line">    *p = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里是一个常量指针的例子的<code>const int*</code>定义的<code>p</code>指代的是一个量的地址，你可以改变原本变量的值，但是不能从<code>p</code>的间接引用来改变所指，可以改变<code>p</code>的指代对象来改变<code>*p</code>的值。</p>
<p>这里一个例子关于常量指针，但是问题重点不在指针：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mystrcopy</span><span class="params">(<span class="keyword">char</span>* copy, <span class="keyword">const</span> <span class="keyword">char</span>* source)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(*copy++ = *source)&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> a[<span class="number">20</span>] = <span class="string">"How are you?"</span>;</span><br><span class="line">  <span class="keyword">char</span> b[<span class="number">20</span>];</span><br><span class="line">  mystrcopy(b,a);</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt; b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的循环条件，先赋值再判断再<code>++</code>，即判断左值是否为零。</p>
<h2 id="指针常量">指针常量</h2>
]]></content>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>Thread 1: signal SIGABRT</title>
    <url>/2020/04/26/Thread-1-signal-SIGABRT/</url>
    <content><![CDATA[<h1 id="遇见的thread-1-signal-sigabrt问题记录">遇见的Thread 1: signal SIGABRT问题记录</h1>
<h2 id="c数组中">C++数组中</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> iArray[<span class="number">2</span>][<span class="number">2</span>];   <span class="comment">// 这里定义数组出问题，报错太奇怪了。。。找半天</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> q = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"what is your matrix"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; iArray[i][j];</span><br><span class="line">            <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">                n = iArray[i][j];</span><br><span class="line">                m += n;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j == (<span class="number">2</span> - i)) &#123;</span><br><span class="line">                p = iArray[i][j];</span><br><span class="line">                q += p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; m&lt;&lt; <span class="string">" is the first trace"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; q&lt;&lt;<span class="string">" is the secone trace"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里，使用Xcode编译的时候，虽然可以正常输出想要的两个“秩”，但是会爆出<strong>Thread 1: signal SIGABRT</strong></p>
<p>对应行好像是一个地址（指针）类型的量，大概猜到是和数组相关的问题，在朋友的🆚帮助下，爆出<code>iArray</code>的问题，OK，数组越界就是这次错误的答案。·</p>
<blockquote>
<p>这里猜测，在数组循环的时候，使用的存储位置是可以连续的，简单的说，在越界时，数据存到了对应数组指针的下一位，运算时用的是指针而不是数组的坐标？</p>
</blockquote>
]]></content>
      <tags>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2020/05/03/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="正则表达式学习记录">正则表达式学习记录</h1>
<h2 id="section"></h2>
]]></content>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB Notes</title>
    <url>/2020/10/10/MATLAB-Notes/</url>
    <content><![CDATA[<h1 id="matlab-notes">MATLAB Notes</h1>
<blockquote>
<p>Noob</p>
</blockquote>
<h2 id="syntax-difference">Syntax Difference</h2>
<h3 id="if-else-in-matlab">if-else in MATLAB</h3>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">200</span>;</span><br><span class="line">   <span class="keyword">if</span>( a == <span class="number">100</span> )</span><br><span class="line"> </span><br><span class="line">       <span class="keyword">if</span>( b == <span class="number">200</span> )</span><br><span class="line">        </span><br><span class="line">          fprintf(<span class="string">'Value of a is 100 and b is 200 \n'</span> );</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">       </span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line">   fprintf(<span class="string">'Exact value of a is : %d '</span>, a, <span class="string">'\n'</span>);</span><br><span class="line">   fprintf(<span class="string">'Exact value of b is : %d'</span>, b );</span><br></pre></td></tr></table></figure>
<p>and list if else in other language:</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">100</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> b == <span class="number">200</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Value of a is 100 and b is 200"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"Exact value of a is \(a)"</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"Exact value of b is \(b)"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>We don't need to use the <code>{}</code>, but the end expression is needed. Like it in <code>C++</code>, we need to write <code>;</code> at the end of the line.</p>
<h3 id="switch-in-matlab">switch in MATLAB</h3>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">grade = <span class="string">'B'</span>;</span><br><span class="line">   <span class="keyword">switch</span>(grade)</span><br><span class="line">   <span class="keyword">case</span> <span class="string">'A'</span> </span><br><span class="line">      fprintf(<span class="string">'Excellent!'</span> );</span><br><span class="line">   <span class="keyword">case</span> <span class="string">'B'</span> </span><br><span class="line">       fprintf(<span class="string">'Well done'</span> );</span><br><span class="line">   <span class="keyword">case</span> <span class="string">'C'</span> </span><br><span class="line">      fprintf(<span class="string">'Well done'</span> );</span><br><span class="line">   <span class="keyword">case</span> <span class="string">'D'</span></span><br><span class="line">      fprintf(<span class="string">'You passed'</span> );</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">case</span> <span class="string">'F'</span> </span><br><span class="line">     fprintf(<span class="string">'Better try again'</span> );</span><br><span class="line">     </span><br><span class="line">   <span class="keyword">otherwise</span></span><br><span class="line">     fprintf(<span class="string">'Invalid grade'</span> );</span><br><span class="line">   <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>the expression <code>end</code> just like the close braces,</p>
<h2 id="math-caculation">Math caculation</h2>
<h3 id="matrix-devision">Matrix devision</h3>
<blockquote>
<p>MATLAB 中有两种矩阵除法符号：即左除“＼” 和右除 “／” 。</p>
</blockquote>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a = [ <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> ; <span class="number">4</span> <span class="number">5</span> <span class="number">6</span>; <span class="number">7</span> <span class="number">8</span> <span class="number">9</span>];</span><br><span class="line">b = [ <span class="number">7</span> <span class="number">5</span> <span class="number">6</span> ; <span class="number">2</span> <span class="number">0</span> <span class="number">8</span>; <span class="number">5</span> <span class="number">7</span> <span class="number">1</span>];</span><br><span class="line">c = a / b <span class="comment">%左除</span></span><br><span class="line">d = a \ b <span class="comment">%右除</span></span><br></pre></td></tr></table></figure>
<p>$$ </p>
<p>e $$</p>
<p>Solve</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms x y(x)</span><br><span class="line"></span><br><span class="line">eql = diff(y, x, <span class="number">3</span>) - (diff(y, x, <span class="number">2</span>))/(x)</span><br><span class="line"></span><br><span class="line">solve(eql, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p>Jacobian</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">syms x y</span><br><span class="line"></span><br><span class="line">f1 = x^<span class="number">2</span> + y^<span class="number">2</span> - <span class="number">4</span></span><br><span class="line">f2 = <span class="built_in">exp</span>(-x) + y - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f = [f1, f2]</span><br><span class="line"></span><br><span class="line">v = [x, y]</span><br><span class="line"></span><br><span class="line">jacobian(f, v)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
</search>
